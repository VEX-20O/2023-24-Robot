{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor flipIntakeMotor = motor(PORT6, ratio18_1, true);\n\nmotor LeftMotorA = motor(PORT1, ratio6_1, false);\n\nmotor LeftMotorB = motor(PORT2, ratio6_1, true);\n\nmotor RightMotorA = motor(PORT3, ratio6_1, false);\n\nmotor RightMotorB = motor(PORT4, ratio6_1, true);\n\nmotor mainIntakeMotor = motor(PORT20, ratio18_1, false);\n\nlimit LimitSwitchA = limit(Brain.ThreeWirePort.A);\ndigital_out piston = digital_out(Brain.ThreeWirePort.B);\nmotor cata = motor(PORT19, ratio36_1, true);\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       Tyler Vaughn                                                  */\n/*    Created:      06/01/2023                                                    */\n/*    Description:  V1 of Robot                                               */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n \nint main() {\n//set the velocity of flipdown intake\n  flipIntakeMotor.setVelocity(100,percent);\n//set the velocity of front intake\n  mainIntakeMotor.setVelocity(100,percent);\n\n  while(true) {\n    //Arcade Drive Code\n    if(abs(Controller1.Axis1.position()) > 5 || abs(Controller1.Axis3.position()) > 5){\n      LeftMotorA.spin(forward, Controller1.Axis1.position() + Controller1.Axis3.position(), percent);\n      LeftMotorB.spin(forward, Controller1.Axis1.position() + Controller1.Axis3.position(), percent);\n      RightMotorA.spin(forward, Controller1.Axis1.position() -  Controller1.Axis3.position(), percent);\n      RightMotorB.spin(forward, Controller1.Axis1.position() - Controller1.Axis3.position(), percent);\n    }\n    else {\n     // LeftMotorA.stop(brake);\n      //LeftMotorB.stop(brake);\n     /// RightMotorA.stop(brake);\n     // RightMotorB.stop(brake);\n\n       LeftMotorA.stop();\n      LeftMotorB.stop();\n      RightMotorA.stop();\n      RightMotorB.stop();\n    }\n\n    //Front Intake Control\n    if (Controller1.ButtonL2.pressing()){\n      mainIntakeMotor.spin(forward);\n    }else if(Controller1.ButtonR2.pressing()){\n      mainIntakeMotor.spin(reverse);\n    }else{\n      mainIntakeMotor.stop();\n    }\n    \n    //Catapult\n    //if you press the catapult botton\n    if (Controller1.ButtonL1.pressing()) {\n      //before the cata reaches the limit switch\n      while(!LimitSwitchA.pressing()){\n        //the catapult will keep going up\n        cata.spin(forward,10,volt);\n      }\n      //if the limit switch has been activated, stop the catapult\n      cata.stop(brake);\n    } \n    //if the catapult hasn't been pressed, don't move the catapult\n    else {\n      cata.stop(brake);\n    }\n    //if the limit switch has been activated and you press the catapult button, \n    if (LimitSwitchA.pressing() && Controller1.ButtonL1.pressing()){\n      //launch the catapult\n      cata.spinFor(forward, 360, degrees);\n    }\n\n    //flipdown Intake controls\n    //if you press the flipdown intake button\n    if (Controller1.ButtonR1.pressing()) {\n      flipIntakeMotor.spin(reverse);\n      piston.set(true);\n    }\n    else if(Controller1.ButtonB.pressing()){\n      flipIntakeMotor.spin(reverse);\n    } \n    else if (Controller1.ButtonA.pressing()){\n      flipIntakeMotor.spin(forward);\n    }\n    else {\n      flipIntakeMotor.stop();\n      piston.set(false);\n     \n    }\n\n    vex::task::sleep(20); //Sleep the task for a short amount of time to prevent wasted resources.\n  }\n}","textLanguage":"cpp","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[6],"name":"flipIntakeMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[1],"name":"LeftMotorA","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[2],"name":"LeftMotorB","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[3],"name":"RightMotorA","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[4],"name":"RightMotorB","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[20],"name":"mainIntakeMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[1],"name":"LimitSwitchA","customName":false,"deviceType":"LimitSwitch","deviceClass":"limit","setting":{"id":"partner"},"triportSourcePort":22},{"port":[2],"name":"piston","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22},{"port":[19],"name":"cata","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.6","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}